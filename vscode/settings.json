{
  //--------------------------------------------------
  // Editor General Settings
  //--------------------------------------------------
  "editor.inlineSuggest.enabled": true,
  "editor.accessibilitySupport": "off",
  "editor.fontFamily": "'SauceCodePro Nerd Font Mono', 'Courier New', monospace",
  "editor.minimap.enabled": false,
  "files.autoSave": "onFocusChange",
  "window.zoomLevel": 1,
  "workbench.colorTheme": "One Monokai",
  "workbench.settings.editor": "json",

  //--------------------------------------------------
  // Terminal Configuration
  //--------------------------------------------------
  "terminal.integrated.fontFamily": "'SauceCodePro Nerd Font Mono'",

  // https://cashapp.github.io/hermit/usage/ide/#visual-studio-code-terminal
  "terminal.integrated.env.osx": {
    "ACTIVE_HERMIT": null,
    "HERMIT_ENV": null,
    "HERMIT_ENV_OPS": null,
    "HERMIT_BIN": null
  },

  //--------------------------------------------------
  // Language-specific Settings
  //--------------------------------------------------

  // JavaScript
  "eslint.format.enable": true,
  "[javascript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    },
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.formatOnType": false,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },

  // HTML/JSON
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },

  // Terraform
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.codeActionsOnSave": {
      "source.formatAll.terraform": "explicit"
    }
  },
  "[terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.codeActionsOnSave": {
      "source.formatAll.terraform": "explicit"
    }
  },
  "[terraform][terraform-vars]": {
    "editor.codeActionsOnSave": {
      "source.formatAll.terraform": "explicit"
    }
  },
  "terraform.experimentalFeatures.validateOnSave": false,

  //--------------------------------------------------
  // Language Tools and Extensions
  //--------------------------------------------------
  "go.toolsManagement.autoUpdate": true,
  "go.terminal.activateEnvironment": false,
  "python.terminal.activateEnvironment": false,
  "redhat.telemetry.enabled": false,

  //--------------------------------------------------
  // Live Share Configuration
  //--------------------------------------------------
  "liveshare.allowGuestDebugControl": true,
  "liveshare.allowGuestTaskControl": true,
  "liveshare.diagnosticLogging": true,

  //--------------------------------------------------
  // Zig Configuration
  //--------------------------------------------------
  "zig.zls.enabled": "on",
  "git.ignoreMissingGitWarning": true,

  //--------------------------------------------------
  // Markdownlint Configuration
  //--------------------------------------------------
  "markdownlint.config": {
    "MD022": false,
    "MD033": false,
    "MD013": false,
    "MD032": false,
    "MD031": false,
    "MD040": false
  },

  //--------------------------------------------------
  // AmpCode Configuration
  //--------------------------------------------------
  "amp.url": "https://ampcode.com/",
  "amp.permissions": [
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "source bin/activate-hermit"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "npm install -g @anthropic-ai/claude-code"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "npm install -g @anthropic-ai/claude-cli"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "hermit install node"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "hermit init ."
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "git commit -m \"Fix zsh init hang and simplify git config\n\n- Remove early return in zsh/init.zsh that prevented plugins from loading\n- Consolidate git configuration into gitconfig.symlink with Groq-specific settings\n- Remove gitconfig.private.example since this is a private repo\""
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "git add -A"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "rm /home/ldonald/.dotfiles/git/gitconfig.private.example"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "node --check src/gitlab.js && node --check src/gitlab-usage-collector.js"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "node --check src/gitlab-usage-collector.js"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "node src/gitlab.js --help"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "cp src/gitlab.js src/gitlab.js.broken"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "node --check src/gitlab.js"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "go get github.com/alecthomas/kong"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "go mod tidy"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "source .envrc && go run openai_api.go"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "mv openai_test.go openai_api.go"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "source .envrc && go run openai_test.go"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "pbpaste | go run curl2env.go"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "bake r //Groq/Test/CM/V2/BFT/Ursa_BFT/ursa-flash:deploy-lab"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "bake build //Groq/Test/CM/V2/BFT/Ursa_BFT/ursa-flash"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "git commit -m \"Fix whitespace and UTF-8 formatting from lint\""
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "git add Groq/Test/CM/V2/BFT/Ursa_BFT/ursa-flash/src/device_map.json Groq/Test/CM/V2/BFT/Ursa_BFT/ursa-flash/src/stages.rs"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "lint -f"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "cargo clippy"
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "git commit -m \"Make boot layout configurable in ursa-flash\n\nAdd --boot-layout command line argument with default value of\n'flashlayout_core-image-full-cmdline/optee/LinuxBootUrsa.tsv'\""
      }
    },
    {
      "tool": "Bash",
      "action": "allow",
      "matches": {
        "cmd": "git add Groq/Test/CM/V2/BFT/Ursa_BFT/ursa-flash/src/main.rs"
      }
    }
  ],
  "amp.tab.enabled": true
}
